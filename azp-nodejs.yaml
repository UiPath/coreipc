steps:
  - task: DotNetCoreCLI@2
    displayName: '$(Label_NodeJS) Install dotnet-script'
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'install -g dotnet-script --version 0.50.1'

  - task: DotNetCoreCLI@2
    displayName: '$(Label_NodeJS) Check dotnet-script'
    inputs:
      command: 'custom'
      custom: 'script'
      arguments: 'eval "Console.WriteLine(1 + 2)"'

  - task: DotNetCoreCLI@2
    displayName: '$(Label_NodeJS) Restore and build .NET'
    inputs:
      projects: '$(DotNet_SessionSolution)'
      arguments: '--configuration $(DotNet_BuildConfiguration) -p:Version="$(FullVersion)"'

  - task: Npm@1
    displayName: '$(Label_NodeJS) Write $[FullVersion] to package.json'
    inputs:
      command: 'custom'
      workingDir: '$(NodeJS_ProjectPath)'
      customCommand: 'version $(FullVersion) --allow-same-version'

  - task: Npm@1
    displayName: '$(Label_NodeJS) Restore'
    inputs:
        command: 'install'
        workingDir: $(NodeJS_ProjectPath)
        customRegistry: 'useFeed'
        customFeed: '424ca518-1f12-456b-a4f6-888197fc15ee'
    
  - task: Npm@1
    displayName: '$(Label_NodeJS) Build'
    inputs:
        command: 'custom'
        workingDir: $(NodeJS_ProjectPath)
        customCommand: 'run build'
    
  - task: Npm@1
    displayName: '$(Label_NodeJS) Run unit tests'
    inputs:
        command: 'custom'
        workingDir: $(NodeJS_ProjectPath)
        customCommand: 'run test'

  - task: PublishTestResults@2
    displayName: '$(Label_NodeJS) Publish test results'
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      workingDir: $(NodeJS_ProjectPath)
      testResultsFiles: './src/Clients/nodejs/reports/test-results.xml'

  - task: ArchiveFiles@2
    displayName: '$(Label_NodeJS) Archive project directory'
    inputs:
      archiveType: 'zip'
      includeRootFolder: false
      rootFolderOrFile: '$(NodeJS_ProjectPath)'
      archiveFile: '$(NodeJS_ArchivePath)'

  - task: PublishBuildArtifacts@1
    displayName: '$(Label_NodeJS) Publish the $(NodeJS_ArtifactName) to the pipeline instance'
    inputs:
      ArtifactName: '$(NodeJS_ArtifactName)'
      PathtoPublish: '$(NodeJS_ArchivePath)'
      ArtifactType: 'Container'
