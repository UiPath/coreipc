  - task: DotNetCoreCLI@2
    displayName: '$(Label_NodeJS) Restore and build "UiPath.CoreIpc.csproj"'
    inputs:
      projects: '$(DotNet_MainProjectPath)'
      arguments: '--configuration $(NodeJS_DotNet_BuildConfiguration) --framework netstandard2.0 -p:Version="$(FullVersion)"'

  - task: DotNetCoreCLI@2
    displayName: '$(Label_NodeJS) Restore and build "UiPath.CoreIpc.NodeInterop.csproj"'
    inputs:
      projects: '$(NodeJS_DotNetNodeInteropProject)'
      arguments: '--configuration $(NodeJS_DotNet_BuildConfiguration) --framework net5.0 -p:Version="$(FullVersion)"'

  - task: Npm@1
    displayName: '$(Label_NodeJS) Write $[FullVersion] to package.json'
    inputs:
      command: 'custom'
      workingDir: '$(NodeJS_ProjectPath)'
      customCommand: 'version $(FullVersion) --allow-same-version'

  - task: Npm@1
    displayName: '$(Label_NodeJS) Restore'
    inputs:
        command: 'install'
        workingDir: $(NodeJS_ProjectPath)
        customRegistry: 'useFeed'
        customFeed: '424ca518-1f12-456b-a4f6-888197fc15ee'
    
  - task: Npm@1
    displayName: '$(Label_NodeJS) Build'
    inputs:
        command: 'custom'
        workingDir: $(NodeJS_ProjectPath)
        customCommand: 'run build'
    
  - task: Npm@1
    displayName: '$(Label_NodeJS) Run unit tests'
    inputs:
        command: 'custom'
        workingDir: $(NodeJS_ProjectPath)
        customCommand: 'run test'

  - task: PublishTestResults@2
    displayName: '$(Label_NodeJS) Publish test results'
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      workingDir: $(NodeJS_ProjectPath)
      testResultsFiles: './src/Clients/nodejs/reports/test-results.xml'

  - task: PublishCodeCoverageResults@1
    displayName: '$(Label_NodeJS) Publish code coverage results'
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: './src/Clients/nodejs/reports/coverage/cobertura-coverage.xml'
