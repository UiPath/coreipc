import {
    TimeSpan,
    CancellationToken,
} from 'foundation';

import { NamedPipeClientSocket } from './NamedPipeClientSocket.node';
import { NamedPipeSocketLikeCtor } from './NamedPipeSocketLikeCtor.node';
import { Socket, Address } from 'io';

export class NamedPipeAddress extends Address {
    constructor(
        public readonly pipeName: string,
        public readonly ctor: NamedPipeSocketLikeCtor | undefined = undefined,
    ) {
        super();
    }

    public async connectAsync(timeout: TimeSpan, ct: CancellationToken): Promise<Socket> {
        return await NamedPipeClientSocket.connect(this, timeout, ct);
    }
}

