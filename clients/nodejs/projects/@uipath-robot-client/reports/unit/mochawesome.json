{
  "stats": {
    "suites": 6,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2019-10-26T11:04:45.898Z",
    "end": "2019-10-26T11:04:45.931Z",
    "duration": 33,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "7de5e57e-d402-44f4-8f8c-16fef5783c81",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "70c63651-e4f9-43ea-95c4-d96ad686d574",
        "title": "class:RobotAgentProxy",
        "fullFile": "E:\\Ipc\\clients\\nodejs\\projects\\@uipath-robot-client\\test\\unit\\robot-agent-proxy.test.ts",
        "file": "\\test\\unit\\robot-agent-proxy.test.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "6847c810-7e3b-49b8-a7fe-b3246a7fa0f1",
            "title": "ctor",
            "fullFile": "E:\\Ipc\\clients\\nodejs\\projects\\@uipath-robot-client\\test\\unit\\robot-agent-proxy.test.ts",
            "file": "\\test\\unit\\robot-agent-proxy.test.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "shouldn't throw",
                "fullTitle": "class:RobotAgentProxy ctor shouldn't throw",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(() => new robot_agent_proxy_1.RobotAgentProxy()).should.not.throw();\n(() => new robot_agent_proxy_1.RobotAgentProxy(new robot_proxy_1.RobotProxy())).should.not.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "5874b4bd-947b-4a3d-a7b6-2ada7083abaf",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5874b4bd-947b-4a3d-a7b6-2ada7083abaf"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "38348ac8-b96d-4faa-a457-c97aac85be3e",
            "title": "method:CloseAsync",
            "fullFile": "E:\\Ipc\\clients\\nodejs\\projects\\@uipath-robot-client\\test\\unit\\robot-agent-proxy.test.ts",
            "file": "\\test\\unit\\robot-agent-proxy.test.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "shouldn't reject even if called multiple times",
                "fullTitle": "class:RobotAgentProxy method:CloseAsync shouldn't reject even if called multiple times",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "__awaiter(void 0, void 0, void 0, function* () {\n            const client = new robot_agent_proxy_1.RobotAgentProxy();\n            yield client.CloseAsync().should.eventually.be.fulfilled;\n        })",
                "err": {},
                "isRoot": false,
                "uuid": "dfafbd9f-91eb-444d-807a-81ba525d9853",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should complete all observables exposed by RobotAgetProxy",
                "fullTitle": "class:RobotAgentProxy method:CloseAsync should complete all observables exposed by RobotAgetProxy",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "__awaiter(void 0, void 0, void 0, function* () {\n            const client = new robot_agent_proxy_1.RobotAgentProxy();\n            const observables = [\n                client.RobotStatusChanged,\n                client.ProcessListUpdated,\n                client.JobStatusChanged,\n                client.JobCompleted\n            ];\n            const _spies = observables.map((x) => {\n                const _spy = chai_1.spy(() => {\n                    console.log('foo');\n                });\n                x.subscribe({ complete: _spy });\n                return _spy;\n            });\n            const promise = client.CloseAsync();\n            yield promise;\n            for (const _spy of _spies) {\n                _spy.should.have.been.called();\n            }\n        })",
                "err": {},
                "isRoot": false,
                "uuid": "46488a49-dc21-4867-9c56-6533711ca4ed",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "dfafbd9f-91eb-444d-807a-81ba525d9853",
              "46488a49-dc21-4867-9c56-6533711ca4ed"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 8,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "913b87c1-37d0-4c0e-9927-3b1d022589f6",
            "title": "property:RobotStatusChanged",
            "fullFile": "E:\\Ipc\\clients\\nodejs\\projects\\@uipath-robot-client\\test\\unit\\robot-agent-proxy.test.ts",
            "file": "\\test\\unit\\robot-agent-proxy.test.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "shouldn't throw",
                "fullTitle": "class:RobotAgentProxy property:RobotStatusChanged shouldn't throw",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(() => new robot_agent_proxy_1.RobotAgentProxy().RobotStatusChanged).should.not.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "eb3bb9e3-229b-4740-904a-4bc2d329b8a9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should return an observable",
                "fullTitle": "class:RobotAgentProxy property:RobotStatusChanged should return an observable",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai_1.expect(new robot_agent_proxy_1.RobotAgentProxy().RobotStatusChanged).to.be.instanceOf(rxjs_1.Observable);",
                "err": {},
                "isRoot": false,
                "uuid": "57e196e0-1cd8-4b58-a407-9e7155b12568",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "shouldn't emit from the very beginning",
                "fullTitle": "class:RobotAgentProxy property:RobotStatusChanged shouldn't emit from the very beginning",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "__awaiter(void 0, void 0, void 0, function* () {\n            const mock = mockRobotProxy({\n                ServiceUnavailable: new rxjs_1.Subject(),\n                OrchestratorStatusChanged: new rxjs_1.Subject(),\n                ProcessListChanged: new rxjs_1.Subject(),\n                JobCompleted: new rxjs_1.Subject(),\n                JobStatusChanged: new rxjs_1.Subject()\n            });\n            const client = new robot_agent_proxy_1.RobotAgentProxy(mock);\n            let observer = null;\n            client.RobotStatusChanged.subscribe(observer = {\n                next: chai_1.spy(() => { }),\n                error: chai_1.spy(() => { }),\n                complete: chai_1.spy(() => { })\n            });\n            yield Promise.yield();\n            observer.next.should.not.have.been.called();\n            observer.error.should.not.have.been.called();\n            observer.complete.should.not.have.been.called();\n        })",
                "err": {},
                "isRoot": false,
                "uuid": "ef155ce3-99c7-4e27-b20f-1d01c9f479cb",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "eb3bb9e3-229b-4740-904a-4bc2d329b8a9",
              "57e196e0-1cd8-4b58-a407-9e7155b12568",
              "ef155ce3-99c7-4e27-b20f-1d01c9f479cb"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "801a837b-8e94-44a9-a338-b30d0d6a30cf",
        "title": "class:RobotProxy",
        "fullFile": "E:\\Ipc\\clients\\nodejs\\projects\\@uipath-robot-client\\test\\unit\\robot-proxy.test.ts",
        "file": "\\test\\unit\\robot-proxy.test.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "5883aaa0-31db-4d73-a8a8-4f8c05236e70",
            "title": "ctor",
            "fullFile": "E:\\Ipc\\clients\\nodejs\\projects\\@uipath-robot-client\\test\\unit\\robot-proxy.test.ts",
            "file": "\\test\\unit\\robot-proxy.test.ts",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "shouldn't throw",
                "fullTitle": "class:RobotProxy ctor shouldn't throw",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "(() => new robot_proxy_1.RobotProxy()).should.not.throw();",
                "err": {},
                "isRoot": false,
                "uuid": "aac092ff-3824-4449-9595-b28b3750fce5",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "aac092ff-3824-4449-9595-b28b3750fce5"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}